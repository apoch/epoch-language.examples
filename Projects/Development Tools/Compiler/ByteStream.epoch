//
// The Epoch Language Project
// Epoch Development Tools - Compiler Core
//
// BYTESTREAM.EPOCH
// General functionality for writing streams of bytes
//


//
// Emit a single byte into the stream
//
ByteStreamEmitByte : buffer ref targetbuffer, integer ref offset, integer value [nogc]
{
	writebuffer(targetbuffer, offset, value & 0xff)
	++offset
}

//
// Emit a 32-bit integer into the stream
//
ByteStreamEmitInteger : buffer ref targetbuffer, integer ref offset, integer value [nogc]
{
	writebuffer(targetbuffer, offset, (value) & 0xff)
	++offset
	writebuffer(targetbuffer, offset, (value / 0x100) & 0xff)
	++offset
	writebuffer(targetbuffer, offset, (value / 0x10000) & 0xff)
	++offset
	writebuffer(targetbuffer, offset, (value / 0x1000000) & 0xff)
	++offset
}

//
// Emit a 16-bit integer into the stream
//
ByteStreamEmitInteger16 : buffer ref targetbuffer, integer ref offset, integer16 value [nogc]
{
	integer v = cast(integer, value)
	writebuffer(targetbuffer, offset, (v) & 0xff)
	++offset
	writebuffer(targetbuffer, offset, (v / 0x100) & 0xff)
	++offset
}

//
// Pad the stream with 0 bytes until it is targetoffset bytes long
//
ByteStreamEmitPadding : buffer ref targetbuffer, integer ref offset, integer targetoffset [nogc]
{
	while(offset < targetoffset)
	{
		ByteStreamEmitByte(targetbuffer, offset, 0x00)
	}
}

//
// Emit a string (or portion thereof) into the stream
//
ByteStreamEmitSubstring : buffer ref targetbuffer, integer ref offset, string s, integer bytes [nogc]
{
	writebuffer(targetbuffer, offset, s, bytes)
	offset += bytes
}

