

Open : integer hwnd, integer ScintillaHWND, string filename
{
	integer INVALID_HANDLE_VALUE = 0xffffffff
	integer FILE_SHARE_READ = 0x01
	integer OPEN_EXISTING = 3
	integer GENERIC_READ = 0x80000000

	integer filehandle = CreateFile(filename, GENERIC_READ, 0, 0, OPEN_EXISTING, 0, 0)
	if(filehandle != INVALID_HANDLE_VALUE)
	{
		integer PAGE_READONLY = 0x02
		
		integer len = GetFileSize(filehandle, 0)

		if(len > 0)
		{
			integer mappinghandle = CreateFileMapping(filehandle, 0, PAGE_READONLY, 0, 0, 0)
			if(mappinghandle != 0)
			{
				integer FILE_MAP_READ = 0x04
				integer ptr = MapViewOfFile(mappinghandle, FILE_MAP_READ, 0, 0, len)

				if(ptr != 0)
				{					
					SetScintillaText(ScintillaHWND, ptr, len)
					SetScintillaNonDirty(ScintillaHWND)
					UnmapViewOfFile(ptr)
				}
				CloseHandle(mappinghandle)
			}
			else
			{
				MessageBox(hwnd, "Failed to create mapping of file: " ; filename, "ERA Development Environment", MB_ICONEXCLAMATION)
			}
		}
		else
		{
			ClearScintillaText(ScintillaHWND)
			SetScintillaNonDirty(ScintillaHWND)
		}
		CloseHandle(filehandle)
	}
	else
	{
		MessageBox(hwnd, "Could not open file: " ; filename, "ERA Development Environment", MB_ICONEXCLAMATION)
	}
}


DoSave : integer hwnd
{
	integer GENERIC_WRITE = 0x40000000
	integer CREATE_ALWAYS = 2
	integer MB_ICONSTOP = 0x10

	OpenTab tab = 0, 0, "", ""
	FindTabAtIndex(CurrentTabs, ActiveTabIndex, tab)

	integer filehandle = CreateFile(tab.FileName, GENERIC_WRITE, 0, 0, CREATE_ALWAYS, 0, 0)
	if(filehandle == 0)
	{
		MessageBox(hwnd, "Unexpected error while saving file!", "ERA Development Environment", MB_ICONSTOP)
		return()
	}

	integer doclength = SendMessage(hwnd, SCI_GETLENGTH, 0, 0) + 1
	buffer output = doclength
	SendMessage(hwnd, SCI_GETTEXT, doclength, output)

	integer written = 0
	WriteFile(filehandle, output, doclength - 1, written, 0)

	CloseHandle(filehandle)

	SetScintillaNonDirty(hwnd)
}

SaveDocument : integer hwnd, integer scintillahwnd
{
	OpenTab tab = 0, 0, "", ""
	FindTabAtIndex(CurrentTabs, ActiveTabIndex, tab)
	
	if(length(tab.FileName) == 0)
	{
		SaveDocumentAs(hwnd, scintillahwnd)
	}
	else
	{
		DoSave(scintillahwnd)
	}
}

SaveDocumentAs : integer hwnd, integer scintillahwnd -> string filename = ""
{
	integer customfilterbuffersize = 256
	buffer customfilterbuffer = customfilterbuffersize

	integer filebuffersize = 2048
	buffer filebuffer = filebuffersize

	integer filetitlebuffersize = 2048
	buffer filetitlebuffer = filetitlebuffersize

	integer16 word = 0

	OpenFileNameStruct ofn = sizeof(ofn), hwnd, GetModuleHandle(0), FileTypeFilters,
				 customfilterbuffer, customfilterbuffersize, 1, filebuffer, filebuffersize,
				 filetitlebuffer, filetitlebuffersize, "", "Save File", 0, word, word, "", 0, 0, ""

	integer ofnret = GetSaveFileName(ofn)
	if(ofnret != 0)
	{
		filename = cast(string, ofn.file)
		SetActiveTabInfo(filename, TrimFilePath(filename))
		DoSave(scintillahwnd)
	}
}


PromptToSaveAndExit : integer hwnd, list<OpenTab> ref dirtytabs -> boolean ret = false
{
	integer LB_SETSEL = 0x185
	
	WindowClass wc = sizeof(wc), 0, SavePromptWindowProcedure, 0, 0, GetHInstance(), 0, LoadCursor(0, IDC_ARROW), BrushBackground, "", "EraSavePromptClass", 0
	RegisterClassEx(wc)

	Rect adjusted = 0, 0, 420, 390
	AdjustWindowRect(adjusted, 0x02c80000, false)
	
	Rect parentrect = 0, 0, 0, 0
	GetWindowRect(hwnd, parentrect)
	
	integer centeredx = ((parentrect.right - parentrect.left) - (adjusted.right - adjusted.left)) / 2
	integer centeredy = ((parentrect.bottom - parentrect.top) - (adjusted.bottom - adjusted.top)) / 2
	
	integer dialoghwnd = CreateWindowEx(0, "EraSavePromptClass", "ERA - Epoch Development Environment", 0x02c80000, centeredx, centeredy, adjusted.right - adjusted.left, adjusted.bottom - adjusted.top, hwnd, 0, GetHInstance(), 0)

	EnableWindow(hwnd, false)
	
	ShowWindow(dialoghwnd, SW_SHOW)

	integer listhwnd = CreateWindowEx(0, "LISTBOX", "", 0x50800008, 10, 50, 400, 300, dialoghwnd, 0, GetHInstance(), 0)
	SendMessage(listhwnd, WM_SETFONT, FontUIDefault, 0)
	
	PopulateListWithTabTitles(listhwnd, dirtytabs)
	
	SendMessage(listhwnd, LB_SETSEL, 1, -1)
	
	
	integer savebuttonhwnd = CreateWindowEx(0, "BUTTON", "&Save Selected", 0x50800000, 10, 350, 150, 30, dialoghwnd, 1001, GetHInstance(), 0)
	integer discardbuttonhwnd = CreateWindowEx(0, "BUTTON", "&Discard All", 0x50800000, 170, 350, 150, 30, dialoghwnd, 1002, GetHInstance(), 0)
	integer cancelbuttonhwnd = CreateWindowEx(0, "BUTTON", "Cancel", 0x50800000, 330, 350, 80, 30, dialoghwnd, 2, GetHInstance(), 0)
	
	SendMessage(savebuttonhwnd, WM_SETFONT, FontUIDefault, 0)
	SendMessage(discardbuttonhwnd, WM_SETFONT, FontUIDefault, 0)
	SendMessage(cancelbuttonhwnd, WM_SETFONT, FontUIDefault, 0)
	
	boolean active = true
	while(active)
	{
		WaitMessage()
		active = ModalDialogPump(dialoghwnd)
	}
	
	EnableWindow(hwnd, true)
	BringWindowToTop(hwnd)
}

