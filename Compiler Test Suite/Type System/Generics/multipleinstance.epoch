//
// MULTIPLEINSTANCE.EPOCH
//
// Test of instantiating templates with different arguments
//

type listnode<type T> : list<T> | nothing

structure list<type T> :
	T value,
	listnode<T> next
	
	
type reflistnode<type T> : reflist<T> | nothing

structure reflist<type T> :
	T ref value,
	reflistnode<T> next
	
	
type variant : string | integer

check : string ref s
{
	assert(s == "Test")
}

check : integer ref i
{
	assert(false)
}


prepend<type T> : list<T> ref thelist, T value
{
	list<T> newlist = value, thelist
	thelist = newlist
}


pop<type T> : list<T> ref thelist, list<T> ref tail
{
	thelist = tail
}

pop<type T> : list<T> ref thelist, nothing
{
	assert(false)
}


TryPop :
{
	pop<string>(textlist, textlist.next)
}


global
{
	list<string> textlist = "test", nothing
}


entrypoint :
{
	list<integer> numericlist = 42, nothing
	prepend<integer>(numericlist, 666)
	prepend<integer>(numericlist, 1)
	
	assert(numericlist.value == 1)
	
	
	prepend<string>(textlist, "Foo")
	prepend<string>(textlist, "Bar")
	
	assert(textlist.value == "Bar")
	
	TryPop()
	
	assert(textlist.value == "Foo")
	
	
	reflist<variant> test = "Test", nothing
	check(test.value)
	
	passtest()
}

