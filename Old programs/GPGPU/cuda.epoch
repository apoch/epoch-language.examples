//
// CUDA.EPOCH
//
// Minimal example of invoking language extension modules for Epoch,
// specifically the module for interoperability with nVidia's CUDA.
//
// This example illustrates running basic arithmetic computations on
// the GPU, using functions and flow control logic implemented entirely
// in Epoch. The CUDA language extension cross-compiles the Epoch code
// to CUDA, which is then compiled by the CUDA SDK into an assembly
// format suitable for direct execution on capable hardware.
//


extension("EpochCUDA")


entrypoint : () -> ()
{
	array(values, 1, 2, 3, 4, 5, 6, 7, 8, 9)

	cuda
	{
		integer(i, 0)
		while(i < length(values))
		{
			integer(value, readarray(values, i))
			writearray(values, i, frobnicate(value))
			++i
		}
	}

	map(values, writeelement)
}


frobnicate : (integer(number)) -> (integer(retnumber, 0))
{
	retnumber = number * 5
}


writeelement : (integer(number)) -> ()
{
	debugwritestring(cast(string, number))
}

