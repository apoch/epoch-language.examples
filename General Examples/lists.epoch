//
// LISTS.EPOCH
//
// Basic demonstration of using lists
//

entrypoint : () -> ()
{
	integer(foo, 0)

	foo = add(list(1, 2, 3, 4, 5))
	debugwritestring(cast(string, foo))

	foo = add(foo, list(40, 2))
	debugwritestring(cast(string, foo))

	foo = 0
	foo = add(list(40, 2), foo)
	debugwritestring(cast(string, foo))

	foo = add(list(21, 9), list(10, 2))
	debugwritestring(cast(string, foo))

	debugwritestring(cast(string, reduce(list(20, 20, 1, 1), add)))

	debugwritestring(reduce(list("The quick brown", " fox jumped o", "ver the lazy ", "sleeping dog."), concat))

	map(list("Testing", "1", "2", "3"), debugwritestring)

	map(map(list(1, 2, 3, 4, 5), square), writelistelement)


	list(fib, 1, 1, 2, 3, 5, 8, 13, 21, 34)
	map(fib, writelistelement)

	debugwritestring(cast(string, reduce(fib, mysum)))

	foo = reduce(list(10, 1, 2, 3), subtract)
	debugwritestring(cast(string, foo))


	list(emptylist, string)
	map(emptylist, debugwritestring)		// This should not do anything
}


square : (integer(x)) -> (integer(ret, 0))
{
	ret = x * x
}

writelistelement : (integer(element)) -> ()
{
	debugwritestring(cast(string, element))
}

mysum : (integer(x), integer(y)) -> (integer(ret, 0))
{
	ret = x + y
}

